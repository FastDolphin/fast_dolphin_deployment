version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: ./fast_dolphin_backend/Dockerfile
    container_name: api
    ports:
      - 8000:8000
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGODB_NAME: ${MONGODB_NAME}
      REQUESTS_COLLECTION: ${REQUESTS_COLLECTION}
      TRAININGPLANS_COLLECTION: ${TRAININGPLANS_COLLECTION}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_HOST: rabbitmq
    depends_on:
      - mongodb
      - rabbitmq

  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

  telegram-bot:
    build:
      context: ..
      dockerfile: ./fast_dolphin_telegram_bot/Dockerfile
    container_name: tg-bot
    environment:
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      ADMIN_NAME_EVG: ${ADMIN_NAME_EVG}
      ADMIN_CHAT_ID_EVG: ${ADMIN_CHAT_ID_EVG}
      ADMIN_NAME_NAT: ${ADMIN_NAME_NAT}
      ADMIN_CHAT_ID_NAT: ${ADMIN_CHAT_ID_NAT}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      BACKEND_API: ${BACKEND_API}
      VERSION: ${VERSION}
    depends_on:
      - rabbitmq

  rabbitmq:
    image: "rabbitmq"
    container_name: rabbitmq
    ports:
      - 5672:5672

  frontend:
    build:
      context: ..
      dockerfile: ./fastdolphin_frontend/Dockerfile
    container_name: frontend
    working_dir: /app
    tty: true
#    volumes:
#      - ../fastdolphin_frontend/certs:/etc/letsencrypt/live/fast-dolphin.com
#      - ../fastdolphin_frontend/certs/dhparam.pem:/etc/ssl/certs/dhparam.pem
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      REACT_APP_ENV: ${REACT_APP_ENV}
      REACT_APP_DEV_SERVER_URL: ${REACT_APP_DEV_SERVER_URL}
    depends_on:
      - api
      - mongodb

  nginx:
    build:
      context: ..
      dockerfile: ./fastdolphin_frontend/Dockerfile.nginx
    volumes:
      - ../fastdolphin_frontend/public:/var/www/html
      - ../fastdolphin_frontend/certs:/etc/letsencrypt/live/fast-dolphin.com
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - api

volumes:
  mongodb_data:
